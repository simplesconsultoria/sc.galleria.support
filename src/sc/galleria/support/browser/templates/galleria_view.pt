<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      metal:use-macro="here/main_template/macros/master"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="plone">

<body>

<metal:main fill-slot="main">
 <metal:main_macro define-macro="main"
     tal:define="result python:here.atctListAlbum(images=1, folders=1, subimages=0, others=1);
                 images result/images;
                 albums result/folders;
                 otherContents result/others;
                 kssClassesView context/@@kss_field_decorator_view;
                 getKssClasses nocall:kssClassesView/getKssClassesInlineEditable;
                 templateId template/getId;">

    <div metal:define-macro="text-field-view"
         id="parent-fieldname-text" class="stx"
         tal:define="kss_class python:getKssClasses('text',
                     templateId=templateId, macro='text-field-view');
                     has_text exists:context/aq_explicit/getText;
                     text python:has_text and here.getText() or ''"
         tal:condition="text"
         tal:attributes="class python:here.Format() in ('text/structured',
         'text/x-rst', ) and 'stx' + kss_class or 'plain' + kss_class">
        <div metal:define-slot="inside" tal:replace="structure text">The body</div>
    </div>

    <div tal:replace="structure provider:plone.abovecontenttitle" />
    <metal:title define-slot="content-title">
        <metal:comment tal:content="nothing">
            If you write a custom title always use
            <h1 class="documentFirstHeading"></h1> for it.
        </metal:comment>
        <h1 metal:use-macro="context/kss_generic_macros/macros/generic_title_view">
            Generic KSS Title. Is rendered with class="documentFirstHeading".
        </h1>
    </metal:title>

    <div tal:content="structure provider:plone.belowcontenttitle" tal:condition="not:ajax_load" />

    <metal:description define-slot="content-description">
        <metal:comment tal:content="nothing">
            If you write a custom description always use
            <div class="documentDescription"></div> for it
        </metal:comment>
        <div metal:use-macro="context/kss_generic_macros/macros/generic_description_view">
            Generic KSS Description. Is rendered with class="documentDescription".
        </div>
    </metal:description>


    <div id="content-galleria">
      <tal:albumsimages tal:condition="python:albums or images">
        <tal:images tal:condition="images" tal:repeat="image images">
            <div class="photoAlbumEntry">
                        <a tal:attributes="href string:${image/absolute_url}/view;
                                           title image/Description">
                            <span class="photoAlbumEntryWrapper">
                            <img src="" alt="" tal:replace="structure python:image.tag(scale='large', title=image.Description())" />
                            </span>
                    <span class="photoAlbumEntryTitle"
                          tal:content="image/pretty_title_or_id"
                          i18n:translate="">
                       Title
                    </span>
                        </a>
            </div>
        </tal:images>

        <div class="photoAlbum" tal:condition="albums">
        <tal:albums tal:repeat="album albums">
            <div class="photoAlbumEntry photoAlbumFolder"
                 tal:define="image_brains_in_album python:album.atctListAlbum(subimages=1)['subimages'];
                             number_of_images python:len(image_brains_in_album);
                             random python:modules['random'];
                             random_image python:number_of_images and random.choice(image_brains_in_album).getObject() or None">
                        <a tal:attributes="href album/getURL;
                                           title album/Description">
                            <span class="photoAlbumEntryWrapper">
                                <img src="" alt=""
                                     tal:condition="number_of_images"
                                     tal:replace="structure python:random_image.tag(scale='large', title=album.Description)" />
                            </span>
                            <span class="photoAlbumEntryTitle">
                               <tal:title content="album/pretty_title_or_id"
                                          i18n:translate="">Title</tal:title>
                            (<tal:number content="number_of_images" />)
                            </span>
                        </a>
            </div>
        </tal:albums>
        </div>

        <div class="visualClear"><!-- --></div>
      </tal:albumsimages>
    </div>

    <tal:listing condition="otherContents"
                 define="folderContents otherContents">
        <metal:listing metal:use-macro="here/folder_listing/macros/listing">
            <metal:empty metal:fill-slot="no_items_in_listing"></metal:empty>
        </metal:listing>

    </tal:listing>

    <metal:subtopics use-macro="here/atct_topic_view/macros/folderlisting_macro" />

    <metal:galleria_macro use-macro="here/galleriamacros/macros/galleria_js" />

 </metal:main_macro>
</metal:main>

</body>

</html>
